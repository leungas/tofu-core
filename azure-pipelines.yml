pr:
  - master

pool:
  vmImage: ubuntu-latest

stages:
  - stage: CI
    variables: 
      - group: tofu-variables
      - name: postgres
        value: 'tofu-workspace-test'
        
    jobs: 
      - job: Test
        steps:
          - task: Bash@3
            displayName: 'Collecting IP of the runner'
            name: RunnerIP
            inputs:
              targetType: inline
              script: |
                ipaddress=${curl -s http://ipinfo.io/ip}
                echo "##vso[task.setvariable variable=address;isOutput=true;]$ipaddress"

          - task: Bash@3
            displayName: 'Generating random Postgres Password'
            name: PwdGenerator
            inputs:
              targetType: inline
              script: |
                pgsecret=${echo $RANDOM | md5sum | head -c 20; echo}
                echo "##vso[task.setvariable variable=secret;isOutput=true;]$pgsecret"

          - task: Bash@3
            displayName: 'Preparing the working ARM template for deployment'
            env:
              DB_SECRET: ${PwdGenerator.pgsecret}
            inputs:
              targetType: inline
              script: |
                enbsubst < test/arm/postgres.value.json > postgres.input.json

          - task: AzureCLI@2
            displayName: 'Installing Postgres'
            name: BuildAssets
            inputs:
              azureSubscription: ${variables.azureSubscription}
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                az group create --name rg-eas-tofucore-tst --location eastasia
                az deployment group create --name tofu-test-deployment \
                --group rg-eas-tofucore-tst --template tests/arm/postgres.arm.json --values postgres.input.json > arm.output.json
                pgname=${jq -r ".outputs.pdbEntityName.value" arm.output.json}
                echo "##vso[task.setvariable variable=postgresName;isOutput=true;]$pgname"
                echo "##vso[task.setvariable variable=resouceGroup;isOutput=true;]rg-eas-tofucore-tst"

          - task: AzureCLI@2
            displayName: 'Loading Scripted Data'
            name: LoadAssets
            inputs:
              azureSubscription: ${variables.azureSubscription}
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                az login --allow-no-subscription
                az postgres flexible-server execute --name ${BuildAssets.postgresName} \
                --admin-user postgres --admin-password ${PwdGenerator.pgsecret} \
                --database-name postgres --file-path /test/arm/create_db.sql

          - task: NodeTool@0
            displayName: 'Install Node.JS runtime'
            inputs:
              versionSpec: '16.x'  

          - displayName: 'Installing Dependencies and Test'
            env:
              ENV_APP_CONFIG: 'e2e.config.yaml'
            script: |
              yarn install
              yarn build
              yarn test:e2e    

          - task: AzureCLI@2
            displayName: "Dismental environment"
            inputs: 
              azureSubscription: ${variables.azureSubscription}
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                az group delete ${BuildAssets.resourceGroup}

  - stage: CD
    jobs:
      - job: Build
        variables: 
        - group: tofu-variables
        steps:
          - task: Docker@2
            inputs:
              command: login
              containerRegistry: ${variables.azureRepoHost}

          - task: Docker@2
            inputs:
              command: buildAndPush
              repository: ${variables.azureRegistryName}
              tags: |
                ${Build.BuildId}
                latest

                
